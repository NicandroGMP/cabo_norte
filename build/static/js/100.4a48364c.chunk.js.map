{"version":3,"file":"static/js/100.4a48364c.chunk.js","mappings":"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","sources":["@crema/core/AppMessageView/index.js","@crema/core/AppInfoView/index.js","pages/auth/AuthWrapper.js","pages/auth/Signup/SignupFirebase.js","pages/auth/Signup/index.js","redux/actions/Common.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SnackbarContent from '@mui/material/SnackbarContent';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport {hideMessage} from 'redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Slide} from '@mui/material';\r\nimport {amber, green} from '@mui/material/colors';\r\n\r\nconst PREFIX = 'AppMessageView';\r\n\r\nconst classes = {\r\n  success: `${PREFIX}-success`,\r\n  error: `${PREFIX}-error`,\r\n  info: `${PREFIX}-info`,\r\n  warning: `${PREFIX}-warning`,\r\n  icon: `${PREFIX}-icon`,\r\n  iconVariant: `${PREFIX}-iconVariant`,\r\n  message: `${PREFIX}-message`,\r\n};\r\n\r\nconst StyledSnackbar = styled(Snackbar)(({theme}) => ({\r\n  [`& .${classes.success}`]: {\r\n    backgroundColor: green[600],\r\n  },\r\n\r\n  [`& .${classes.error}`]: {\r\n    backgroundColor: theme.palette.error.main,\r\n  },\r\n\r\n  [`& .${classes.info}`]: {\r\n    backgroundColor: theme.palette.primary.light,\r\n  },\r\n\r\n  [`& .${classes.warning}`]: {\r\n    backgroundColor: amber[700],\r\n  },\r\n\r\n  [`& .${classes.icon}`]: {\r\n    fontSize: 20,\r\n  },\r\n\r\n  [`& .${classes.iconVariant}`]: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n\r\n  [`& .${classes.message}`]: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction='left' />;\r\n}\r\n\r\nconst AppMessageView = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const {className, message, variant, ...other} = props;\r\n  const Icon = variantIcon[variant];\r\n  const dispatch = useDispatch();\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setTimeout(() => dispatch(hideMessage()), 500);\r\n  };\r\n  useEffect(() => {\r\n    if (message) {\r\n      setOpen(true);\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <StyledSnackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n      }}\r\n      open={open}\r\n      onClose={onClose}\r\n      autoHideDuration={3500}\r\n      TransitionComponent={TransitionLeft}\r\n    >\r\n      <SnackbarContent\r\n        className={clsx(classes[variant], className)}\r\n        aria-describedby='client-snackbar'\r\n        message={\r\n          <span id='client-snackbar' className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton\r\n            key='close'\r\n            aria-label='close'\r\n            color='inherit'\r\n            onClick={onClose}\r\n            size='large'\r\n          >\r\n            <CloseIcon className={classes.icon} />\r\n          </IconButton>,\r\n        ]}\r\n        {...other}\r\n      />\r\n    </StyledSnackbar>\r\n  );\r\n};\r\nAppMessageView.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nexport default AppMessageView;\r\n","import React from 'react';\r\n\r\nimport {useSelector} from 'react-redux';\r\nimport AppMessageView from '@crema/core/AppMessageView';\r\nimport AppLoader from '@crema/core/AppLoader';\r\n\r\nconst AppInfoView = () => {\r\n  const {error, loading, message} = useSelector(({common}) => common);\r\n\r\n  const showMessage = () => {\r\n    return <AppMessageView variant='success' message={message.toString()} />;\r\n  };\r\n\r\n  const showError = () => {\r\n    return <AppMessageView variant='error' message={error.toString()} />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <AppLoader />}\r\n\r\n      {message && showMessage()}\r\n      {error && showError()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppInfoView;\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Typography} from '@mui/material';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\n\r\nconst AuthWrapper = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          maxWidth: 900,\r\n          minHeight: {xs: 320, sm: 450},\r\n          width: '100%',\r\n          overflow: 'hidden',\r\n          position: 'relative',\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: {xs: '100%', sm: '50%', lg: '40%'},\r\n            padding: {xs: 5, lg: 10},\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          {children}\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            width: {xs: '100%', sm: '50%', lg: '60%'},\r\n            position: 'relative',\r\n            padding: {xs: 5, lg: 10},\r\n            display: {xs: 'none', sm: 'flex'},\r\n            alignItems: {sm: 'center'},\r\n            justifyContent: {sm: 'center'},\r\n            flexDirection: {sm: 'column'},\r\n            backgroundColor: (theme) => theme.palette.grey[900],\r\n            color: (theme) => theme.palette.common.white,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              maxWidth: 320,\r\n            }}\r\n          >\r\n            <Typography\r\n              component='h2'\r\n              sx={{\r\n                fontWeight: Fonts.BOLD,\r\n                fontSize: 30,\r\n                mb: 4,\r\n              }}\r\n            >\r\n              Welcome to Crema!\r\n            </Typography>\r\n            <Typography>\r\n              Crema is purely based on Material ui components and follows\r\n              Material ui guidelines.\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n\r\nAuthWrapper.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport {Form, Formik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport AppTextField from '@crema/core/AppFormComponents/AppTextField';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport {useAuthMethod} from '@crema/utility/AuthHooks';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport {Link} from 'react-router-dom';\r\nimport {AiOutlineGoogle, AiOutlineTwitter} from 'react-icons/ai';\r\nimport {BsGithub} from 'react-icons/bs';\r\nimport {FaFacebookF} from 'react-icons/fa';\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(<IntlMessages id='validation.nameRequired' />),\r\n  email: yup\r\n    .string()\r\n    .email(<IntlMessages id='validation.emailFormat' />)\r\n    .required(<IntlMessages id='validation.emailRequired' />),\r\n  password: yup\r\n    .string()\r\n    .required(<IntlMessages id='validation.passwordRequired' />),\r\n});\r\n\r\nconst SignupFirebase = () => {\r\n  const {registerUserWithEmailAndPassword, logInWithPopup} = useAuthMethod();\r\n\r\n  return (\r\n    <Box sx={{flex: 1, display: 'flex', flexDirection: 'column'}}>\r\n      <Box sx={{flex: 1, display: 'flex', flexDirection: 'column', mb: 5}}>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setSubmitting}) => {\r\n            setSubmitting(true);\r\n            console.log('data', data);\r\n            registerUserWithEmailAndPassword(data);\r\n            console.log(\r\n              'registerUserWithEmailAndPassword',\r\n              registerUserWithEmailAndPassword,\r\n            );\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {({isSubmitting}) => (\r\n            <Form style={{textAlign: 'left'}} noValidate autoComplete='off'>\r\n              <Box sx={{mb: {xs: 4, xl: 5}}}>\r\n                <AppTextField\r\n                  label={<IntlMessages id='common.name' />}\r\n                  name='name'\r\n                  variant='outlined'\r\n                  sx={{\r\n                    width: '100%',\r\n                    '& .MuiInputBase-input': {\r\n                      fontSize: 14,\r\n                    },\r\n                  }}\r\n                />\r\n              </Box>\r\n\r\n              <Box sx={{mb: {xs: 4, xl: 5}}}>\r\n                <AppTextField\r\n                  label={<IntlMessages id='common.email' />}\r\n                  name='email'\r\n                  variant='outlined'\r\n                  sx={{\r\n                    width: '100%',\r\n                    '& .MuiInputBase-input': {\r\n                      fontSize: 14,\r\n                    },\r\n                  }}\r\n                />\r\n              </Box>\r\n\r\n              <Box sx={{mb: {xs: 4, xl: 5}}}>\r\n                <AppTextField\r\n                  label={<IntlMessages id='common.password' />}\r\n                  name='password'\r\n                  type='password'\r\n                  variant='outlined'\r\n                  sx={{\r\n                    width: '100%',\r\n                    '& .MuiInputBase-input': {\r\n                      fontSize: 14,\r\n                    },\r\n                  }}\r\n                />\r\n              </Box>\r\n\r\n              <Box\r\n                sx={{\r\n                  mb: {xs: 3, xl: 4},\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  flexWrap: 'wrap',\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    sx={{\r\n                      ml: -3,\r\n                    }}\r\n                  />\r\n                  <Box\r\n                    component='span'\r\n                    sx={{\r\n                      mr: 2,\r\n                      color: 'grey.500',\r\n                    }}\r\n                  >\r\n                    <IntlMessages id='common.iAgreeTo' />\r\n                  </Box>\r\n                </Box>\r\n                <Box\r\n                  component='span'\r\n                  sx={{\r\n                    color: (theme) => theme.palette.primary.main,\r\n                    cursor: 'pointer',\r\n                  }}\r\n                >\r\n                  <IntlMessages id='common.termConditions' />\r\n                </Box>\r\n              </Box>\r\n\r\n              <div>\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  disabled={isSubmitting}\r\n                  sx={{\r\n                    minWidth: 160,\r\n                    fontWeight: Fonts.REGULAR,\r\n                    fontSize: 16,\r\n                    textTransform: 'capitalize',\r\n                    padding: '4px 16px 8px',\r\n                  }}\r\n                  type='submit'\r\n                >\r\n                  <IntlMessages id='common.signup' />\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          color: 'grey.500',\r\n          mb: {xs: 5, md: 7},\r\n        }}\r\n      >\r\n        <span style={{marginRight: 4}}>\r\n          <IntlMessages id='common.alreadyHaveAccount' />\r\n        </span>\r\n        <Box\r\n          component='span'\r\n          sx={{\r\n            fontWeight: Fonts.MEDIUM,\r\n            '& a': {\r\n              color: (theme) => theme.palette.primary.main,\r\n              textDecoration: 'none',\r\n            },\r\n          }}\r\n        >\r\n          <Link to='/signIn'>\r\n            <IntlMessages id='common.signIn' />\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          backgroundColor: (theme) => theme.palette.background.default,\r\n          mx: {xs: -5, lg: -10},\r\n          mb: {xs: -6, lg: -11},\r\n          mt: 'auto',\r\n          py: 2,\r\n          px: {xs: 5, lg: 10},\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            color: (theme) => theme.palette.text.secondary,\r\n          }}\r\n        >\r\n          <IntlMessages id='common.orLoginWith' />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <IconButton\r\n            sx={{p: 2, '& svg': {fontSize: 18}}}\r\n            onClick={() => logInWithPopup('google')}\r\n          >\r\n            <AiOutlineGoogle />\r\n          </IconButton>\r\n          <IconButton\r\n            sx={{\r\n              p: 1.5,\r\n              '& svg': {fontSize: 18},\r\n            }}\r\n            onClick={() => logInWithPopup('facebook')}\r\n          >\r\n            <FaFacebookF />\r\n          </IconButton>\r\n          <IconButton\r\n            sx={{\r\n              p: 1.5,\r\n              '& svg': {fontSize: 18},\r\n            }}\r\n            onClick={() => logInWithPopup('github')}\r\n          >\r\n            <BsGithub />\r\n          </IconButton>\r\n          <IconButton\r\n            sx={{\r\n              p: 1.5,\r\n              '& svg': {fontSize: 18},\r\n            }}\r\n            onClick={() => logInWithPopup('twitter')}\r\n          >\r\n            <AiOutlineTwitter />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      <AppInfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignupFirebase;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport AuthWrapper from '../AuthWrapper';\r\nimport SignupFirebase from './SignupFirebase';\r\nimport AppLogo from '@crema/core/AppLayout/components/AppLogo';\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <AuthWrapper>\r\n      <Box sx={{width: '100%'}}>\r\n        <Box sx={{mb: {xs: 6, xl: 8}}}>\r\n          <Box\r\n            sx={{\r\n              mb: 5,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <AppLogo />\r\n          </Box>\r\n        </Box>\r\n        <SignupFirebase />\r\n      </Box>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import {\r\n  FETCH_ERROR,\r\n  FETCH_START,\r\n  FETCH_SUCCESS,\r\n  HIDE_MESSAGE,\r\n  SHOW_MESSAGE,\r\n  TOGGLE_APP_DRAWER,\r\n  UPDATING_CONTENT,\r\n} from 'shared/constants/ActionTypes';\r\n\r\nexport const fetchStart = () => {\r\n  return (dispatch) => dispatch({type: FETCH_START});\r\n};\r\n\r\nexport const fetchSuccess = () => {\r\n  return (dispatch) => dispatch({type: FETCH_SUCCESS});\r\n};\r\nexport const updatingContent = () => {\r\n  return (dispatch) => dispatch({type: UPDATING_CONTENT});\r\n};\r\n\r\nexport const fetchError = (error) => {\r\n  return (dispatch) => dispatch({type: FETCH_ERROR, payload: error});\r\n};\r\n\r\nexport const showMessage = (message) => {\r\n  return (dispatch) => dispatch({type: SHOW_MESSAGE, payload: message});\r\n};\r\nexport const onToggleAppDrawer = () => {\r\n  return (dispatch) => dispatch({type: TOGGLE_APP_DRAWER});\r\n};\r\n\r\nexport const hideMessage = () => {\r\n  return (dispatch) => dispatch({type: HIDE_MESSAGE});\r\n};\r\n"],"names":["PREFIX","classes","success","error","info","warning","icon","iconVariant","message","StyledSnackbar","styled","Snackbar","theme","backgroundColor","green","palette","main","primary","light","amber","fontSize","opacity","marginRight","spacing","display","alignItems","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","TransitionLeft","props","Slide","direction","React","open","setOpen","className","variant","other","Icon","dispatch","useDispatch","onClose","setTimeout","hideMessage","useEffect","anchorOrigin","vertical","horizontal","autoHideDuration","TransitionComponent","SnackbarContent","clsx","id","action","IconButton","color","onClick","size","Close","useSelector","common","loading","AppLoader","toString","children","sx","flex","flexDirection","justifyContent","maxWidth","minHeight","xs","sm","width","overflow","position","lg","padding","grey","white","component","fontWeight","Fonts","mb","validationSchema","yup","name","required","IntlMessages","email","password","useAuthMethod","registerUserWithEmailAndPassword","logInWithPopup","Box","validateOnChange","initialValues","onSubmit","data","setSubmitting","console","log","isSubmitting","style","textAlign","noValidate","autoComplete","xl","AppTextField","label","type","flexWrap","Checkbox","ml","mr","cursor","Button","disabled","minWidth","textTransform","md","textDecoration","to","background","default","mx","mt","py","px","text","secondary","p","AppInfoView","AuthWrapper","AppLogo","fetchError","FETCH_ERROR","payload","showMessage","SHOW_MESSAGE","HIDE_MESSAGE"],"sourceRoot":""}