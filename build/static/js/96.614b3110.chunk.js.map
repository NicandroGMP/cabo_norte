{"version":3,"file":"static/js/96.614b3110.chunk.js","mappings":"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","sources":["@crema/core/AppMessageView/index.js","@crema/core/AppInfoView/index.js","pages/auth/AuthWrapper.js","pages/auth/ConfirmSignupAwsCognito.js","redux/actions/Common.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SnackbarContent from '@mui/material/SnackbarContent';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport {hideMessage} from 'redux/actions';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Slide} from '@mui/material';\r\nimport {amber, green} from '@mui/material/colors';\r\n\r\nconst PREFIX = 'AppMessageView';\r\n\r\nconst classes = {\r\n  success: `${PREFIX}-success`,\r\n  error: `${PREFIX}-error`,\r\n  info: `${PREFIX}-info`,\r\n  warning: `${PREFIX}-warning`,\r\n  icon: `${PREFIX}-icon`,\r\n  iconVariant: `${PREFIX}-iconVariant`,\r\n  message: `${PREFIX}-message`,\r\n};\r\n\r\nconst StyledSnackbar = styled(Snackbar)(({theme}) => ({\r\n  [`& .${classes.success}`]: {\r\n    backgroundColor: green[600],\r\n  },\r\n\r\n  [`& .${classes.error}`]: {\r\n    backgroundColor: theme.palette.error.main,\r\n  },\r\n\r\n  [`& .${classes.info}`]: {\r\n    backgroundColor: theme.palette.primary.light,\r\n  },\r\n\r\n  [`& .${classes.warning}`]: {\r\n    backgroundColor: amber[700],\r\n  },\r\n\r\n  [`& .${classes.icon}`]: {\r\n    fontSize: 20,\r\n  },\r\n\r\n  [`& .${classes.iconVariant}`]: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n\r\n  [`& .${classes.message}`]: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction='left' />;\r\n}\r\n\r\nconst AppMessageView = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const {className, message, variant, ...other} = props;\r\n  const Icon = variantIcon[variant];\r\n  const dispatch = useDispatch();\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setTimeout(() => dispatch(hideMessage()), 500);\r\n  };\r\n  useEffect(() => {\r\n    if (message) {\r\n      setOpen(true);\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <StyledSnackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n      }}\r\n      open={open}\r\n      onClose={onClose}\r\n      autoHideDuration={3500}\r\n      TransitionComponent={TransitionLeft}\r\n    >\r\n      <SnackbarContent\r\n        className={clsx(classes[variant], className)}\r\n        aria-describedby='client-snackbar'\r\n        message={\r\n          <span id='client-snackbar' className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton\r\n            key='close'\r\n            aria-label='close'\r\n            color='inherit'\r\n            onClick={onClose}\r\n            size='large'\r\n          >\r\n            <CloseIcon className={classes.icon} />\r\n          </IconButton>,\r\n        ]}\r\n        {...other}\r\n      />\r\n    </StyledSnackbar>\r\n  );\r\n};\r\nAppMessageView.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.string,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nexport default AppMessageView;\r\n","import React from 'react';\r\n\r\nimport {useSelector} from 'react-redux';\r\nimport AppMessageView from '@crema/core/AppMessageView';\r\nimport AppLoader from '@crema/core/AppLoader';\r\n\r\nconst AppInfoView = () => {\r\n  const {error, loading, message} = useSelector(({common}) => common);\r\n\r\n  const showMessage = () => {\r\n    return <AppMessageView variant='success' message={message.toString()} />;\r\n  };\r\n\r\n  const showError = () => {\r\n    return <AppMessageView variant='error' message={error.toString()} />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <AppLoader />}\r\n\r\n      {message && showMessage()}\r\n      {error && showError()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppInfoView;\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport PropTypes from 'prop-types';\r\nimport {Typography} from '@mui/material';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\n\r\nconst AuthWrapper = ({children}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          maxWidth: 900,\r\n          minHeight: {xs: 320, sm: 450},\r\n          width: '100%',\r\n          overflow: 'hidden',\r\n          position: 'relative',\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: {xs: '100%', sm: '50%', lg: '40%'},\r\n            padding: {xs: 5, lg: 10},\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          {children}\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            width: {xs: '100%', sm: '50%', lg: '60%'},\r\n            position: 'relative',\r\n            padding: {xs: 5, lg: 10},\r\n            display: {xs: 'none', sm: 'flex'},\r\n            alignItems: {sm: 'center'},\r\n            justifyContent: {sm: 'center'},\r\n            flexDirection: {sm: 'column'},\r\n            backgroundColor: (theme) => theme.palette.grey[900],\r\n            color: (theme) => theme.palette.common.white,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              maxWidth: 320,\r\n            }}\r\n          >\r\n            <Typography\r\n              component='h2'\r\n              sx={{\r\n                fontWeight: Fonts.BOLD,\r\n                fontSize: 30,\r\n                mb: 4,\r\n              }}\r\n            >\r\n              Welcome to Crema!\r\n            </Typography>\r\n            <Typography>\r\n              Crema is purely based on Material ui components and follows\r\n              Material ui guidelines.\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n\r\nAuthWrapper.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {fetchError} from 'redux/actions';\r\nimport {useIntl} from 'react-intl';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport IntlMessages from '@crema/utility/IntlMessages';\r\nimport Button from '@mui/material/Button';\r\nimport AppInfoView from '@crema/core/AppInfoView';\r\nimport {useAuthMethod} from '@crema/utility/AuthHooks';\r\nimport ReactCodeInput from 'react-code-input';\r\nimport AuthWrapper from './AuthWrapper';\r\nimport AppLogo from '@crema/core/AppLayout/components/AppLogo';\r\n\r\nconst ConfirmSignupAwsCognito = (props) => {\r\n  const {confirmCognitoUserSignup} = useAuthMethod();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [pin, setPin] = useState('');\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const handleSubmit = () => {\r\n    const {email} = props.location.state || {};\r\n    if (email && pin.length === 6) {\r\n      confirmCognitoUserSignup(email, pin);\r\n    } else if (!email) {\r\n      navigate('/signup');\r\n      fetchError(messages['validation.tryAgain']);\r\n    } else {\r\n      fetchError(messages['validation.pinLength']);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper>\r\n      <Box sx={{width: '100%'}}>\r\n        <Box\r\n          sx={{\r\n            mb: 5,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <AppLogo />\r\n        </Box>\r\n        <Typography\r\n          variant='h2'\r\n          component='h2'\r\n          sx={{\r\n            mb: 1.5,\r\n            color: (theme) => theme.palette.text.primary,\r\n            fontWeight: Fonts.SEMI_BOLD,\r\n            fontSize: {xs: 14, xl: 16},\r\n          }}\r\n        >\r\n          <IntlMessages id='common.emailVerification' />\r\n        </Typography>\r\n        <Box\r\n          sx={{\r\n            mb: {xs: 5, xl: 10},\r\n            fontSize: 18,\r\n          }}\r\n        >\r\n          <Typography>\r\n            <IntlMessages id='common.verificationMessage' />\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            mb: {xs: 6, xl: 10},\r\n          }}\r\n        >\r\n          <ReactCodeInput\r\n            type='password'\r\n            value={pin}\r\n            fields={6}\r\n            onChange={(value) => setPin(value)}\r\n          />\r\n        </Box>\r\n\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          type='submit'\r\n          sx={{\r\n            fontWeight: Fonts.REGULAR,\r\n            textTransform: 'capitalize',\r\n            fontSize: 16,\r\n            minWidth: 160,\r\n          }}\r\n          onClick={handleSubmit}\r\n        >\r\n          <IntlMessages id='common.submit' />\r\n        </Button>\r\n        <AppInfoView />\r\n      </Box>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ConfirmSignupAwsCognito;\r\n\r\nConfirmSignupAwsCognito.propTypes = {\r\n  location: PropTypes.object,\r\n};\r\n","import {\r\n  FETCH_ERROR,\r\n  FETCH_START,\r\n  FETCH_SUCCESS,\r\n  HIDE_MESSAGE,\r\n  SHOW_MESSAGE,\r\n  TOGGLE_APP_DRAWER,\r\n  UPDATING_CONTENT,\r\n} from 'shared/constants/ActionTypes';\r\n\r\nexport const fetchStart = () => {\r\n  return (dispatch) => dispatch({type: FETCH_START});\r\n};\r\n\r\nexport const fetchSuccess = () => {\r\n  return (dispatch) => dispatch({type: FETCH_SUCCESS});\r\n};\r\nexport const updatingContent = () => {\r\n  return (dispatch) => dispatch({type: UPDATING_CONTENT});\r\n};\r\n\r\nexport const fetchError = (error) => {\r\n  return (dispatch) => dispatch({type: FETCH_ERROR, payload: error});\r\n};\r\n\r\nexport const showMessage = (message) => {\r\n  return (dispatch) => dispatch({type: SHOW_MESSAGE, payload: message});\r\n};\r\nexport const onToggleAppDrawer = () => {\r\n  return (dispatch) => dispatch({type: TOGGLE_APP_DRAWER});\r\n};\r\n\r\nexport const hideMessage = () => {\r\n  return (dispatch) => dispatch({type: HIDE_MESSAGE});\r\n};\r\n"],"names":["PREFIX","classes","success","error","info","warning","icon","iconVariant","message","StyledSnackbar","styled","Snackbar","theme","backgroundColor","green","palette","main","primary","light","amber","fontSize","opacity","marginRight","spacing","display","alignItems","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","TransitionLeft","props","Slide","direction","React","open","setOpen","className","variant","other","Icon","dispatch","useDispatch","onClose","setTimeout","hideMessage","useEffect","anchorOrigin","vertical","horizontal","autoHideDuration","TransitionComponent","SnackbarContent","clsx","id","action","IconButton","color","onClick","size","Close","useSelector","common","loading","AppLoader","toString","children","sx","flex","flexDirection","justifyContent","maxWidth","minHeight","xs","sm","width","overflow","position","lg","padding","grey","white","component","fontWeight","Fonts","mb","confirmCognitoUserSignup","useAuthMethod","navigate","useNavigate","useState","pin","setPin","messages","useIntl","text","xl","type","value","fields","onChange","textTransform","minWidth","email","location","state","length","fetchError","FETCH_ERROR","payload","showMessage","SHOW_MESSAGE","HIDE_MESSAGE"],"sourceRoot":""}